---
import { createAuthClient } from "better-auth/client"

const authClient = createAuthClient({
  baseURL: `${import.meta.env.PUBLIC_API_URL}`
});

export const signinGoogle = async () => {
  const data = await authClient.signIn.social({
    provider: "google",
  });
  
  return data;
};
---
<div class="min-h-screen flex items-center justify-center bg-gray-50">
  <div class="max-w-md w-full p-6 bg-white rounded-lg shadow-md">
    <h2 class="text-2xl font-bold mb-6 text-center">Login</h2>
    
    <form id="loginForm" class="space-y-4">
      <div>
        <label class="block text-sm font-medium text-gray-700">Email</label>
        <input 
          type="email" 
          name="email"
          required
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
        />
      </div>

      <div>
        <label class="block text-sm font-medium text-gray-700">Password</label>
        <input 
          type="password" 
          name="password"
          required
          class="mt-1 block w-full rounded-md border border-gray-300 px-3 py-2"
        />
      </div>

      <button 
        type="submit"
        class="w-full bg-blue-600 text-white rounded-md px-4 py-2 hover:bg-blue-700"
      >
        Sign In
      </button>

      <div class="relative my-4">
        <div class="absolute inset-0 flex items-center">
          <div class="w-full border-t border-gray-300"></div>
        </div>
        <div class="relative flex justify-center text-sm">
          <span class="px-2 bg-white text-gray-500">Or continue with</span>
        </div>
      </div>

      <button 
        type="button"
        id="googleLogin"
        class="w-full flex items-center justify-center border border-gray-300 rounded-md px-4 py-2 hover:bg-gray-50"
      >
        <svg class="w-5 h-5 mr-2" viewBox="0 0 24 24">
          <path fill="#4285F4" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
          <path fill="#34A853" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
          <path fill="#FBBC05" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
          <path fill="#EA4335" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
        </svg>
        Continue with Google
      </button>

      <p id="errorMessage" class="text-red-500 text-sm hidden"></p>
    </form>
  </div>
</div>

<script lang="ts" define:vars={{ apiUrl: import.meta.env.PUBLIC_API_URL }}>
  const form = document.getElementById('loginForm');
  const googleButton = document.getElementById('googleLogin');
  const errorMessage = document.getElementById('errorMessage');

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    const formData = new FormData(e.target);
    
    try {
      const response = await fetch(`${apiUrl}/api/auth/login`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          email: formData.get('email'),
          password: formData.get('password')
        })
      });

      if (!response.ok) throw new Error('Login failed');
      window.location.href = '/';
    } catch (error) {
      if (errorMessage) {
        errorMessage.textContent = 'Invalid email or password';
        errorMessage.classList.remove('hidden');
      }
    }
  });

  googleButton?.addEventListener('click', async () => {
    try {
      const data = await fetch(`${apiUrl}/api/auth/callback/google`, {
        method: 'POST'
      });
      if (!data.ok) throw new Error('Google sign-in failed');
      
      const { url } = await data.json();
      window.location.href = url;
    } catch (error) {
      if (errorMessage) {
        errorMessage.textContent = 'Google sign-in failed. Please try again.';
        errorMessage.classList.remove('hidden');
      }
    }
  });
</script>